# Simple workflow for deploying static content to GitHub Pages
name: Deploy website

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "master" ]
    paths: [ ".github/workflows/**", "SnakeWebGL/**" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build the application
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
    - name: Update submodules
      run: |
        git submodule update --init --recursive
    - name: Install workloads
      run: |
        dotnet workload install \
        wasm-tools-net7 \
        wasm-tools \
        wasm-experimental
    - name: Restore dependencies
      run: dotnet restore
    - name: Publish
      run: dotnet publish SnakeWebGL/SnakeWebGL.csproj -c Release
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: /home/runner/work/SnakeGame/SnakeGame/SnakeWebGL/bin/Release/net8.0/publish/wwwroot
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  
